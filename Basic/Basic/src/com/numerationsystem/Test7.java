package com.numerationsystem;

/*
 * 浮点数
 * 浮点型十进制转换二进制方法
 * 整数部分，和小数部分分别转换
 * 整数部分：除2取余，倒序取余
 * 小数部分：乘2取整，正序取整
 * */
public class Test7 {
    public static void main(String[] args) {
        /*
         * 25.125
         * 整数部分：25
         * 25 / 2 = 12 ... 1
         * 12 / 2 = 6 ... 0
         * 6 / 2 = 3 ... 0
         * 3 / 2 = 1 ... 1
         * 1 / 2 = 0 ... 1
         * 结果 11001 倒序
         *
         * 小数部分：0.125
         * 0.125 * 2 = 0.25 ... 0
         * 0.25 * 2 = 0.5 ... 0
         * 0.5 * 2 = 1 ... 1
         * 结果 001  正序取整
         *
         * 25.125 结果为 11001.001
         *
         * 0.4188
         * 小数部分：0.4188
         * 0.4188 * 2 = 0.8376 ... 0
         * 0.8376 * 2 = 1.6752 ... 1
         * 0.6752 * 2 = 1.3504 ... 1
         * 0.3504 * 2 = 0.7008 ... 0
         * 0.7008 * 2 = 1.4016 ... 1
         * 0.4016 * 2 = 0.8032 ... 0
         * 0.8032 * 2 = 1.6064 ... 1
         * 0.6064 * 2 = 1.2128 ... 1
         * 0.2128 * 2 = 0.4256 ... 0
         * 0.4256 * 2 = 0.8512 ... 0
         * ~=> 0.011001001001  这就说明了，小数的存储是有限的，所以会有精度损失
         * */

        //  浮点数的存储


    }
}
